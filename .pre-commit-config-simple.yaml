# Simple pre-commit configuration using uv-installed tools
# Run: pre-commit install to set up the git hook scripts
# Run: pre-commit run --all-files to run hooks on all files

repos:
  # Use system-installed tools (via uv tool install)
  - repo: local
    hooks:
      # Black formatting
      - id: black
        name: Black code formatter
        entry: black
        language: system
        types: [python]
        args: ["--line-length=88"]
        files: ^(deploy_service|local-airflow/dags|tests)/.*\.py$

      # isort import sorting
      - id: isort
        name: isort import sorter
        entry: isort
        language: system
        types: [python]
        args: ["--profile", "black", "--line-length=88"]
        files: ^(deploy_service|local-airflow/dags|tests)/.*\.py$

      # flake8 linting
      - id: flake8
        name: flake8 linter
        entry: flake8
        language: system
        types: [python]
        args: ["--max-line-length=88", "--extend-ignore=E203,W503"]
        files: ^(deploy_service|local-airflow/dags|tests)/.*\.py$

  # General file checks (no Python version issues)
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.6.0
    hooks:
      - id: trailing-whitespace
      - id: end-of-file-fixer
      - id: check-yaml
        files: ^(.*\.ya?ml)$
        exclude: ^project_archive/.*$
      - id: check-json
        files: ^(.*\.json)$
        exclude: ^project_archive/.*$
      - id: check-added-large-files
        args: ["--maxkb=10000"]
      - id: check-merge-conflict
      - id: debug-statements
        files: ^(deploy_service|local-airflow/dags|tests)/.*\.py$

  # Simple MLOps checks
  - repo: local
    hooks:
      # Model file validation
      - id: check-model-files
        name: Check model files are not committed
        entry: bash -c 'if find . -name "*.pkl" -o -name "*.joblib" -o -name "*.model" | grep -v project_archive | grep -v tests/test-env; then echo "❌ Model files should not be committed to git"; exit 1; fi'
        language: system
        pass_filenames: false

      # Check for secrets (basic)
      - id: check-secrets
        name: Check for potential secrets
        entry: bash -c 'if grep -r "password\|secret\|key\|token" --include="*.py" deploy_service/ local-airflow/dags/ | grep -v "# ok" | grep -v "password.*=" | head -5; then echo "❌ Potential secrets found"; exit 1; fi'
        language: system
        pass_filenames: false
