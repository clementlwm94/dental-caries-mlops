name: 🧪 Continuous Integration

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master ]

jobs:
  test:
    name: 🐍 Test Python Code
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.11, 3.12]

    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4

    - name: 🐍 Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: 📦 Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r tests/requirements.txt
        pip install -r local-airflow/requirements.txt

    - name: 🧹 Lint with flake8
      run: |
        pip install flake8
        # Stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # Exit-zero treats all errors as warnings. GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    - name: 🧪 Run unit tests
      run: |
        cd tests
        python -m pytest test_ml_functions.py -v
        python -m pytest test_deploy_service.py -v

    - name: 📊 Generate test coverage
      run: |
        pip install coverage
        cd tests
        coverage run -m pytest
        coverage report
        coverage xml

    - name: 📈 Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./tests/coverage.xml
        fail_ci_if_error: false

  security:
    name: 🔒 Security Scan
    runs-on: ubuntu-latest

    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4

    - name: 🔍 Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        scan-ref: '.'
        format: 'sarif'
        output: 'trivy-results.sarif'

    - name: 📋 Upload Trivy scan results
      uses: github/codeql-action/upload-sarif@v2
      with:
        sarif_file: 'trivy-results.sarif'

  docker-build:
    name: 🐳 Build Docker Images
    runs-on: ubuntu-latest
    needs: [test]

    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4

    - name: 🐳 Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: 🏗️ Build MLflow image
      run: |
        cd terraform
        docker build -f Dockerfile.mlflow -t mlflow-server:test .

    - name: 🤖 Build prediction service image
      run: |
        cd deploy_service
        docker build -t prediction-service:test .

    - name: ✅ Test image health
      run: |
        # Test that images were built successfully
        docker images | grep -E "(mlflow-server|prediction-service)"
