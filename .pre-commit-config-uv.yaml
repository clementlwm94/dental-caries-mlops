# Pre-commit configuration using uv for MLOps Dental Caries Prediction Project
# Run: pre-commit install to set up the git hook scripts
# Run: pre-commit run --all-files to run hooks on all files

repos:
  # Use uv to run Python tools
  - repo: local
    hooks:
      # Black formatting
      - id: black
        name: Black code formatter
        entry: uv run black
        language: system
        types: [python]
        args: ["--line-length=88"]
        files: ^(deploy_service|local-airflow/dags|tests)/.*\.py$

      # isort import sorting
      - id: isort
        name: isort import sorter
        entry: uv run isort
        language: system
        types: [python]
        args: ["--profile", "black", "--line-length=88"]
        files: ^(deploy_service|local-airflow/dags|tests)/.*\.py$

      # flake8 linting
      - id: flake8
        name: flake8 linter
        entry: uv run flake8
        language: system
        types: [python]
        args: ["--max-line-length=88", "--extend-ignore=E203,W503"]
        files: ^(deploy_service|local-airflow/dags|tests)/.*\.py$

      # bandit security scanning
      - id: bandit
        name: bandit security scanner
        entry: uv run bandit
        language: system
        types: [python]
        args: ["-r", "-f", "json"]
        files: ^(deploy_service|local-airflow/dags)/.*\.py$
        exclude: ^tests/.*$

  # General code quality (these work without Python version issues)
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.6.0
    hooks:
      - id: trailing-whitespace
      - id: end-of-file-fixer
      - id: check-yaml
        files: ^(.*\.ya?ml)$
        exclude: ^project_archive/.*$
      - id: check-json
        files: ^(.*\.json)$
        exclude: ^project_archive/.*$
      - id: check-added-large-files
        args: ["--maxkb=10000"]
      - id: check-merge-conflict
      - id: debug-statements
        files: ^(deploy_service|local-airflow/dags|tests)/.*\.py$

  # MLOps-specific checks
  - repo: local
    hooks:
      # Model file validation
      - id: check-model-files
        name: Check model files are not committed
        entry: bash -c 'if find . -name "*.pkl" -o -name "*.joblib" -o -name "*.model" | grep -v project_archive | grep -v tests/test-env; then echo "Model files should not be committed to git"; exit 1; fi'
        language: system
        pass_filenames: false

      # Test with uv
      - id: pytest-coverage
        name: Run pytest with coverage using uv
        entry: bash -c 'cd tests && uv run pytest --cov=../deploy_service --cov=../local-airflow/dags --cov-report=term-missing --cov-fail-under=70'
        language: system
        pass_filenames: false
        files: ^(deploy_service|local-airflow/dags|tests)/.*\.py$

# Configuration for specific tools
default_language_version:
  python: python3.12

# Skip hooks for specific scenarios
ci:
  skip: [pytest-coverage]  # Skip coverage in CI for speed
